package com.example.devprojectspringbootjava.controller;

import java.text.ParseException;

import org.springframework.web.bind.annotation.*;

import com.example.devprojectspringbootjava.dto.request.AuthenticationRequest;
import com.example.devprojectspringbootjava.dto.request.IntrospectRequest;
import com.example.devprojectspringbootjava.dto.request.LogoutRequest;
import com.example.devprojectspringbootjava.dto.request.RefreshTokenRequest;
import com.example.devprojectspringbootjava.dto.response.ApiResponse;
import com.example.devprojectspringbootjava.dto.response.AuthenticationResponse;
import com.example.devprojectspringbootjava.dto.response.IntrospectResponse;
import com.example.devprojectspringbootjava.service.AuthenticationService;
import com.nimbusds.jose.JOSEException;

@RestController
@RequestMapping("/auth")
public class AuthenticationController {

    private final AuthenticationService authenticationService;

    public AuthenticationController(AuthenticationService authenticationService) {
        this.authenticationService = authenticationService;
    }

    @PostMapping("/login")
    ApiResponse<AuthenticationResponse> authenticate(@RequestBody AuthenticationRequest authenticationRequest) {
        var result = authenticationService.authentication(authenticationRequest);
        ApiResponse<AuthenticationResponse> apiResponse = new ApiResponse<>();
        apiResponse.setCode(200);
        apiResponse.setData(result);

        return apiResponse;
    }

    @PostMapping("/logout")
    ApiResponse<String> logout(@RequestBody LogoutRequest logoutRequest) throws ParseException, JOSEException {
        authenticationService.logout(logoutRequest);

        ApiResponse<String> apiResponse = new ApiResponse<>();

        apiResponse.setCode(200);
        apiResponse.setData("You are logged out successfully");

        return apiResponse;
    }

    @PostMapping("/intro")
    ApiResponse<IntrospectResponse> introspectResponseApiResponse(@RequestBody IntrospectRequest introspectRequest)
            throws ParseException, JOSEException {
        var result = authenticationService.introspect(introspectRequest);
        ApiResponse<IntrospectResponse> apiResponse = new ApiResponse<>();
        apiResponse.setCode(200);
        apiResponse.setData(result);

        return apiResponse;
    }

    @PostMapping("/refreshToken")
    ApiResponse<AuthenticationResponse> refreshToken(@RequestBody RefreshTokenRequest refreshTokenRequest)
            throws ParseException, JOSEException {
        var result = authenticationService.refreshToken(refreshTokenRequest);
        ApiResponse<AuthenticationResponse> apiResponse = new ApiResponse<>();
        apiResponse.setCode(200);
        apiResponse.setMessage("accessToken new have been generated by request refresh");
        apiResponse.setData(result);

        return apiResponse;
    }
}
